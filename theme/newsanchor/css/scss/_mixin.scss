@import '_value';
@mixin border-radius($radius) {
  -webkit-border-radius: $radius;
     -moz-border-radius: $radius;
      -ms-border-radius: $radius;
          border-radius: $radius;
}

@mixin displaygrid($rows: 1, $colums: 1, $important:false) {
	@if $important == false {
		display: grid;
		grid-template-rows: repeat($rows, auto);
		grid-template-columns: repeat($colums, (100%/$colums));
		display: -ms-grid;
		-ms-grid-columns: repeat($rows, auto);
		-ms-grid-rows: repeat($colums, (100%/$colums));
	}@else{
		display: grid !important;
		grid-template-rows: repeat($rows, auto) !important;
		grid-template-columns: repeat($colums, (100%/$colums)) !important;
		display: -ms-grid !important;
		-ms-grid-columns: repeat($rows, auto) !important;
		-ms-grid-rows: repeat($colums, (100%/$colums)) !important;
	}	
}

@mixin displayflex($important:false){
	@if $important == true{
		display: -ms-flexbox!important; display: -webkit-flex!important; display: flex!important;
	}@else{
		display: -ms-flexbox; display: -webkit-flex; display: flex;
	}
}

@mixin flexBasis($size){
	-ms-flex-preferred-size: $size;
	flex-basis: $size;
	-moz-flex-basis: $size;
	-webkit-flex-basis: $size;
	@if type-of($size) != number{
		max-width: none;
	} @else{
		max-width: $size;
	}
}

@mixin alignItems($position:center) {
	-webkit-box-align: $position;
    -ms-flex-align: $position;
    align-items: $position;
}

@mixin fn-ul(){
	font-size:0;letter-spacing: 0;
	>li,>div{
		font-size:$h14;
		display:inline-block;
	}
}

@mixin fontSize($size,$important:false){
	@if $important == true{
		font-size:$size!important;
		font-family: $family !important;
		line-height: $size+0.4 !important;
	}@else{
		font-size:$size;
		font-family: $family;
		line-height: $size+0.4;
	}
	
}

@mixin displayIcon($width,$height,$img,$my_url:$icon_url,$turn:before){
	position:relative;
	&:#{$turn}{
		content: "";
		background:url('#{$my_url}#{$img}') no-repeat left top /100% auto;
		position:absolute;
		display:block;
		width:$width;
		height:$height;
		top:50%;
		@if $turn == before{
		left:0;
		} @else {
			right:0;
		}
		margin-top:-$height/2;
	}
}

@mixin boxShadow($type){
	box-shadow: $type;
	-moz-box-shadow:$type;
	-webkit-box-shadow:$type;
}

@mixin mediaWidth($type){
	@media (max-width:$type){
		@content;
	}
}

@mixin displayNone($important:'false'){
	@if $important == 'true'{
		display:none!important ;
		visibility: hidden!important;
	} @else{
		display:none;
		visibility: hidden;
	}
}

@mixin placeholder($color){
	&::-webkit-input-placeholder { /* Chrome/Opera/Safari */
	  color: $color;
	}
	&::-moz-placeholder { /* Firefox 19+ */
	  color: $color;
	}
	&:-ms-input-placeholder { /* IE 10+ */
	  color: $color;
	}
	&:-moz-placeholder { /* Firefox 18- */
	  color: $color;
	}
}

@mixin text-align($x:center,$y:center){
	 @include displayflex(); align-items: $x; justify-content: $y ;
}

@mixin grey-line($size, $color, $line:'top'){
	margin-#{$line}:$size;
	padding-#{$line}:$size;
	border-#{$line}:1px solid $color;
}

@mixin multiLineEllipsis($lineHeight: 1.2em, $lineCount: 1, $bgColor: #ffffff){
	overflow: hidden;
    height: $lineHeight * $lineCount;
    line-height: $lineHeight;

    &:before {
        content:"";
        float: left;
        width: 5px; 
		height: $lineHeight * $lineCount; 
	}

    & > *:first-child {
        float: right;
        width: 100%;
		margin-left: -5px; 
	}        

    &:after {
        content: "...";  

        box-sizing: content-box;
        -webkit-box-sizing: content-box;
        -moz-box-sizing: content-box;

        float: right; position: relative;
        top: 0 - $lineHeight; left: 100%; 
        width: 3rem; margin-left: -3rem;
        padding-right: 5px;
            
        text-align: right;

        background: -webkit-gradient(linear, left top, right top, from(rgba(255, 255, 255, 0)), to(#{$bgColor}), color-stop(50%, #{$bgColor}));
        background: -moz-linear-gradient(to right, rgba(255, 255, 255, 0), #{$bgColor} 50%, #{$bgColor});            
        background: -o-linear-gradient(to right, rgba(255, 255, 255, 0), #{$bgColor} 50%, #{$bgColor});
        background: -ms-linear-gradient(to right, rgba(255, 255, 255, 0), #{$bgColor} 50%, #{$bgColor});
		background: linear-gradient(to right, rgba(255, 255, 255, 0), #{$bgColor} 50%, #{$bgColor});
	}
}


@mixin transition($sec, $type: ease){
	-webkit-transition: all $sec $type;
	-moz-transition: all $sec $type;
	-ms-transition: all $sec $type;
 	 -o-transition: all $sec $type;
  	transition: all $sec $type;
}

@mixin transform($method) {
	-webkit-transform: $method;
    -moz-transform: $method;
    -ms-transform: $method;
    -o-transform: $method;
    transform: $method;
}


@mixin dotBG($bg-color,$dot-color,$dot-size,$dot-space) {
    background: radial-gradient($dot-color $dot-size, transparent $dot-size), radial-gradient($dot-color $dot-size, transparent $dot-size), linear-gradient($bg-color $dot-size, transparent 0), $bg-color;
    background-size: $dot-space $dot-space, $dot-space $dot-space, 100% 6px;
    background-position: ($dot-space / 2) ($dot-space / 2), 0px 0px, 0px 0px;
}

@mixin stripesBG($color, $bgcolor, $size) {
	background: linear-gradient(to bottom,  $color,  $color 50%,  $bgcolor 50%,  $bgcolor);
	background-size: 100% $size;
}
